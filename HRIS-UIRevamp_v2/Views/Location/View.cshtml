@using HRIS_UIRevamp_v2.ViewModel
@model LocationUpdateViewModel
@{
    ViewBag.Title = "Location/View";
}
<div class="col-md-12 title">
    VIEW LOCATION
</div>

@using (Html.BeginForm("Add", "Location", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "locFrm" }))
{
    @Html.AntiForgeryToken()

    <div class="body-content">
        <div class="col-md-6 no-padding left-container">
            <div class="col-md-12 no-padding tabs-default h55 ff-nt2">
                <div class="tab selected flex flex-left">
                    <span class="margin-left-lg fs26">BASIC INFORMATION</span>
                </div>
            </div>

            <div class="col-md-12 margin-top-default">
                <div class="col-md-12 fs20 ff-nt2 ">
                    @Html.LabelFor(model => model.comp_id, new { @class = "" })
                </div>
                <div class="col-md-12 margin-top-sm">
                    @Html.DropDownListFor(model => model.comp_id, Enumerable.Empty<SelectListItem>(), "", new { @class = "", @disabled = true, @data_selected = Model.comp_id })
                </div>
            </div>

            <div class="col-md-12 margin-top-default">
                <div class="col-md-5 ">
                    <div class="col-md-12 no-padding fs20 ff-nt2">
                        @Html.LabelFor(model => model.loc_id, new { @class = "" })
                    </div>
                    @Html.TextBoxFor(model => model.loc_id, new { @maxlength = "20", @class = "input-default h45 fs20 block", @autocomplete = "off", @disabled = true })
                </div>
                <div class="col-md-7">
                    <div class="col-md-12 no-padding fs20 ff-nt2">
                        @Html.LabelFor(model => model.name1, new { @class = "" })
                    </div>
                    @Html.TextBoxFor(model => model.name1, new { @maxlength = "50", @class = "input-default h45 fs20 block", @autocomplete = "off", @disabled = true })
                </div>
            </div>


            <div class="col-md-12 margin-top-default">
                <div class="col-md-12 fs20 ff-nt2 margin-bottom-sm">
                    Description
                </div>
                <div class="col-md-12 no-padding">
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.description, new { @maxlength = "100", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>
            </div>


            <div class="col-md-12 margin-top-default" id="address">
                <div class="col-md-12 fs20 ff-nt2 margin-bottom-sm">
                    Location Address
                </div>
                <div class="col-md-12 no-padding">
                    <div class="col-md-6">
                        <div class="col-md-12 no-padding fs17">
                            @Html.LabelFor(model => model.streetaddress, new { @class = "" })
                        </div>
                        @Html.TextBoxFor(model => model.streetaddress, new { @maxlength = "100", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                    <div class="col-md-6 ">
                        <div class="col-md-12 no-padding fs17">
                            @Html.LabelFor(model => model.city, new { @class = "" })
                        </div>
                        @Html.TextBoxFor(model => model.city, new { @maxlength = "50", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>

                <div class="col-md-12 no-padding">
                    <div class="col-md-6 margin-top-default">
                        <div class="col-md-12 no-padding fs17">
                            @Html.LabelFor(model => model.province, new { @class = "" })
                        </div>
                        @Html.TextBoxFor(model => model.province, new { @maxlength = "50", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                    <div class="col-md-6 margin-top-default">
                        <div class="col-md-12 no-padding fs17">
                            @Html.LabelFor(model => model.country, new { @class = "" })
                        </div>
                        @Html.TextBoxFor(model => model.country, new { @maxlength = "50", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>
            </div>

            <div class="col-md-12 margin-top-default margin-bottom-lg">

                <div class="col-md-12 fs20 ff-nt2 margin-bottom-sm">
                    Contact Persons
                </div>
                <div class="col-md-12 margin-top-default">
                    <div class="no-padding col-md-1 h45 fs20 ff-nt2 margin-bottom-sm flex flex-center">
                        1.
                    </div>
                    <div class="col-md-11 no-padding">
                        @Html.TextBoxFor(model => model.contactperson1, new { @maxlength = "20", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>
                <div class="col-md-12 margin-top-default">
                    <div class="no-padding col-md-1 h45 fs20 ff-nt2 margin-bottom-sm flex flex-center">
                        2.
                    </div>
                    <div class="col-md-11 no-padding">
                        @Html.TextBoxFor(model => model.contactperson2, new { @maxlength = "20", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>


            </div>
        </div>

        <div class="col-md-6 no-padding">
            <div class="col-md-12 no-padding tabs-default h55 ff-nt2">
                <div class="tab selected flex flex-left">
                    <span class="margin-left-lg fs26"></span>
                </div>
            </div>

            <div class="col-md-12 margin-top-default">
                <div class="col-md-12 fs20 ff-nt2 margin-bottom-sm">
                    Phone Numbers
                </div>
                <div class="col-md-12 margin-top-default">
                    <div class="no-padding col-md-1 h45 fs20 ff-nt2 margin-bottom-sm flex flex-center">
                        1.
                    </div>
                    <div class="col-md-11 no-padding">
                        @Html.TextBoxFor(model => model.phone1, new { @maxlength = "20", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>
                <div class="col-md-12 margin-top-default">
                    <div class="no-padding col-md-1 h45 fs20 ff-nt2 margin-bottom-sm flex flex-center">
                        2.
                    </div>
                    <div class="col-md-11 no-padding">
                        @Html.TextBoxFor(model => model.phone2, new { @maxlength = "20", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>
            </div>

            <div class="col-md-12 margin-top-default margin-bottom-default">
                <div class="col-md-12 fs20 ff-nt2 margin-bottom-sm">
                    Emails
                </div>
                <div class="col-md-12" id="emails">
                    
                    <div class="col-md-12 no-padding-right">
                        <div class="col-md-12 no-padding fs17">
                            @Html.LabelFor(model => model.email1, new { @class = "" })
                        </div>
                        @Html.TextBoxFor(model => model.email1, new { @maxlength = "20", @class = "input-default h45 fs20 block", @disabled = true })
                        @Html.ValidationMessageFor(model => model.email1, "", new { @class = "fs15 text-danger" })
                    </div>
                    
                    <div class="col-md-12 margin-top-default no-padding-right">
                        <div class="col-md-12 no-padding fs17">
                            @Html.LabelFor(model => model.email2, new { @class = "" })
                        </div>
                        @Html.TextBoxFor(model => model.email2, new { @maxlength = "20", @class = "input-default h45 fs20 block", @disabled = true })
                    </div>
                </div>

                <div class="col-md-12 fs20 ff-nt2 margin-top-lg">
                    <div class="col-md-12 no-padding">
                        @Html.LabelFor(model => model.addinfo, new { @class = "" })
                    </div>
                </div>

                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.addinfo, new { @maxlength = "250", @class = "input-default fs20 block", @rows = 5, @disabled = true })
                </div>

                <div class="col-md-12  no-padding margin-bottom-lg">
                    <div class="col-md-5 no-padding pull-right margin-top-lg">
                        <div class="col-md-12 margin-right-default margin-top-lg">
                            <a type="button" href='@Url.Content("~/Location")' class="bg-orange001 button-default block h38 fs20 ff-nt2">CLOSE</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

<script>

    $(document).ready(function () {
        initializeUI();
        initializeEvents()
    });

    function initializeUI() {
            $('#comp_id').selectize({
            valueField: 'KEY',
            labelField: 'VALUE',
            searchField: ['VALUE'],
            sortField: [{ field: 'VALUE', direction: 'asc' }],
            dropdownParent: 'body',
            plugins: ['remove_button'],
            onInitialize: function () {
                __this = this;
                __this.load(function (callback) {
                    $.ajax({
                        url: '@Url.Content("~/LookUp/AllowedFieldsPerUser")',
                        method: 'get',
                        success: function (results) {
                            callback(results);
                        },
                        error: function () {
                            callback();
                        }
                    });
                });
            },
            onBlur: function () {
                $(this.$input[0]).valid();
            },
            onChange: function () {
                $('#loc_id').removeData('previousValue');
                $('#locFrm').validate().element(':input[name="loc_id"]');;
            },
            onLoad: function (data) {
                this.setValue($(this.$input[0]).data('selected'));
            }
        });
    }

    function initializeEvents() {

    }
</script>
